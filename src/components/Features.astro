---
import { Icon } from 'astro-icon/components';

const features = [
{
   icon: 'mdi:virtual-reality',
   title: 'Spatial Computing',
   shortDescription: 'Explora el futuro con Spatial Computing y desarrolla experiencias inmersivas.',
   description: 'Explora el futuro con el Spatial Computing, una tecnología que combina el mundo digital con el físico. Aprende a desarrollar experiencias inmersivas que cambiarán cómo interactuamos con nuestro entorno',
   iconColor: 'text-red-400',
   extraInfo: 'El Spatial Computing es una tecnología revolucionaria que permite crear experiencias digitales que se integran perfectamente con nuestro mundo físico. En este hackathon, aprenderás a utilizar herramientas de última generación para desarrollar aplicaciones que aprovechan la realidad mixta, tracking espacial y más.'
},
{
   icon: 'mdi:globe',
   title: 'Participación Online',
   shortDescription: 'Participa desde donde estés - formato presencial u online disponible.',
   description: 'No importa dónde estés, ¡tienes opciones! Regístrate de manera online a través de nuestro link en <a href="TU_URL_AQUI" target="_blank">Devpost</a> y mantente informado con nuestro servidor de Discord. Si eres parte de 42, también puedes participar presencialmente, ¡nos encantaría verte allí!',
   iconColor: 'text-orange-400',
   extraInfo: 'La modalidad online te permite participar desde cualquier lugar del mundo. Tendrás acceso a todas las charlas, workshops y mentorías a través de nuestra plataforma virtual. Además, nuestro servidor de Discord estará activo 24/7 para que puedas conectar con otros participantes y mentores.'
},
{
   icon: 'mdi:trophy-variant',
   title: 'Premios y Mentoría',
   shortDescription: 'Gana increíbles premios y recibe mentoría de expertos del sector tech.',
   description: 'Recibe grandes premios diseñados para impulsar tu carrera. Desde unas Oculus 3S y ESP32 kits hasta una visita grupal a Google Málaga y sesiones de mentorización privada de trabajadores de empresas como Meta, Google y Crossmint',
   iconColor: 'text-teal-400',
   extraInfo: 'Los premios han sido cuidadosamente seleccionados para impulsar tu carrera en tech. Las Oculus 3S te permitirán seguir desarrollando proyectos de VR/AR, mientras que los Raspberry kits son perfectos para proyectos de IoT. La visita a Google Málaga incluye networking con ingenieros y la posibilidad de ver cómo trabaja uno de los gigantes tech.'
},
{
   icon: 'mdi:account-group',
   title: 'Jueces Expertos',
   shortDescription: 'Ambiente inclusivo con jueces expertos y una comunidad acogedora.',
   description: 'Queremos que todos se sientan bienvenidos, desde principiantes hasta expertos. Contamos con un panel de jueces reconocidos y un ambiente inclusivo para que te sientas cómodo aprendiendo y colaborando. Además, comida incluida, porque sabemos que el hambre no es buen compañero de la creatividad',
   iconColor: 'text-rose-400',
   extraInfo: 'Nuestro panel de jueces incluye profesionales de empresas líderes en el sector tecnológico. Evaluarán los proyectos basándose en criterios como innovación, viabilidad técnica e impacto social. La comunidad está formada por desarrolladores de todos los niveles, diseñadores y entusiastas de la tecnología, creando un ambiente perfecto para aprender y crecer juntos.'
}
];
---

<section id="features" class="py-12 sm:py-16 md:py-20 bg-gradient-to-b from-black/50 to-purple-900/50">
  <div class="container mx-auto px-4">
    <h2 class="text-2xl sm:text-3xl md:text-4xl font-bold text-center mb-8 sm:mb-12 text-green-400">
      Características del Hackathon
    </h2>
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6 md:gap-8">
      {features.map((feature, index) => (
        <div class="relative">
          <button 
            class="w-full text-left bg-black/50 backdrop-blur-sm rounded-xl p-4 sm:p-6 md:p-8 transition-all hover:transform hover:scale-105 cursor-pointer h-full sm:h-[220px]"
            data-modal={`modal-${index}`}
          >
            <div class="flex items-center gap-3 sm:gap-4 mb-4 sm:mb-6">
              <Icon name={feature.icon} class={`w-8 h-8 sm:w-10 sm:h-10 md:w-12 md:h-12 ${feature.iconColor}`} />
              <h3 class="text-lg sm:text-xl font-semibold text-purple-200 leading-tight">{feature.title}</h3>
            </div>
            <p class="text-gray-400 text-xs sm:text-sm leading-relaxed">{feature.shortDescription}</p>
          </button>

          <dialog 
            id={`modal-${index}`} 
            class="modal backdrop:bg-black/80 bg-black text-white p-4 sm:p-6 md:p-8 rounded-xl w-11/12 max-w-2xl mx-auto"
          >
            <div class="modal-content">
              <div class="flex items-center justify-between mb-4 sm:mb-6">
                <div class="flex items-center gap-3 sm:gap-4">
                  <Icon name={feature.icon} class={`w-8 h-8 sm:w-10 sm:h-10 md:w-12 md:h-12 ${feature.iconColor}`} />
                  <h3 class="text-xl sm:text-2xl font-bold text-purple-200">{feature.title}</h3>
                </div>
                <button 
                  class="close-modal text-gray-400 hover:text-white"
                  data-modal={`modal-${index}`}
                >
                  <Icon name="mdi:close" class="w-6 h-6" />
                </button>
              </div>
              <div class="space-y-3 sm:space-y-4">
                <p class="text-gray-300 text-sm sm:text-base" set:html={feature.description}></p>
                <p class="text-gray-300 text-sm sm:text-base">{feature.extraInfo}</p>
              </div>
            </div>
          </dialog>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
 dialog::backdrop {
   background: rgba(0, 0, 0, 0.5);
 }
 
 dialog {
   border: none;
   margin: auto;
 }
 
 .modal {
   animation: modal-open 0.3s ease-out;
 }
 
 @keyframes modal-open {
   from {
     opacity: 0;
     transform: scale(0.95);
   }
   to {
     opacity: 1;
     transform: scale(1);
   }
 }
</style>

<script>
 // Abrir modal
 document.querySelectorAll('button[data-modal]').forEach(button => {
   button.addEventListener('click', () => {
     const modalId = button.getAttribute('data-modal');
     if (modalId) {
       const modal = document.getElementById(modalId);
       if (modal instanceof HTMLDialogElement) {
         modal.showModal();
       }
     }
   });
 });

 // Cerrar modal
 document.querySelectorAll('.close-modal').forEach(button => {
   button.addEventListener('click', () => {
     const modalId = button.getAttribute('data-modal');
     if (modalId) {
       const modal = document.getElementById(modalId);
       if (modal instanceof HTMLDialogElement) {
         modal.close();
       }
     }
   });
 });

 // Cerrar al hacer clic fuera
 document.querySelectorAll('dialog').forEach(dialog => {
   dialog.addEventListener('click', (e) => {
     if (dialog instanceof HTMLDialogElement) {
       const dialogDimensions = dialog.getBoundingClientRect();
       if (
         e.clientX < dialogDimensions.left ||
         e.clientX > dialogDimensions.right ||
         e.clientY < dialogDimensions.top ||
         e.clientY > dialogDimensions.bottom
       ) {
         dialog.close();
       }
     }
   });
 });

 // Prevenir cierre al hacer clic dentro
 document.querySelectorAll('.modal-content').forEach(content => {
   content.addEventListener('click', (e) => {
     e.stopPropagation();
   });
 });
</script>

