---
import { Image } from 'astro:assets';
import Countdown from './Countdown.astro';
---

<section class="relative min-h-screen flex items-center justify-center overflow-hidden py-20">
  <div class="absolute inset-0 z-0">
    <div class="absolute inset-0 bg-gradient-to-r from-purple-900/50 to-green-900/50 mix-blend-multiply"></div>
    <Image
      src="/hero-bg.jpg"
      alt="Spatial Computing Background"
      width={1920}
      height={1080}
      class="w-full h-full object-cover"
    />
  </div>
  
  <div class="relative z-10 text-center">
    <div class="perspective-wrapper mb-8">
      <div class="relative inline-flex">
        <div class="overflow-hidden">
          <img 
            src="Logo/Recurso-2.webp" 
            class="hoverImage max-w-60 md:w-1/2 mx-auto object-contain" 
            alt="HackReality Logo"
            id="hoverLogo"
            style="mask-image: url('Logo/Recurso-2.webp'); -webkit-mask-image: url('Logo/Recurso-2.webp');"
          />
          <div 
            class="shine absolute inset-0 pointer-events-none" 
            style="mask-image: url('Logo/Recurso-2.webp'); -webkit-mask-image: url('Logo/Recurso-2.webp');"
          ></div>
        </div>
      </div>
    </div>

    <h1 class="text-5xl md:text-7xl font-bold mb-6 animate-fade-in-up">
      <span class="bg-clip-text text-transparent bg-gradient-to-r from-green-400 to-purple-500">
        HackReality 2024
      </span>
    </h1>

    <p class="text-2xl md:text-3xl text-purple-200 mb-8 animate-fade-in-up animation-delay-200">
      Explora el futuro del Spatial Computing
    </p>

    <div class="flex justify-center space-x-4 animate-fade-in-up animation-delay-400">
      <a 
        href="https://hackreality-spatial-computing.devpost.com/" 
        target="_blank" 
        class="px-8 py-3 rounded-full bg-green-500 text-black font-bold hover:bg-green-400 transition-colors"
      >
        Participar
      </a>
      <a 
        href="#" 
        class="px-8 py-3 rounded-full bg-purple-600 text-white font-bold hover:bg-purple-500 transition-colors"
      >
        M치s Informaci칩n
      </a>
    </div>

    <div class="mt-16 animate-fade-in-up animation-delay-600">
      <Countdown targetDate="2024-12-13T17:00:00" />
    </div>
  </div>
</section>

<style>
  .perspective-wrapper {
    perspective: 1000px;
    width: fit-content;
    margin: 0 auto;
  }

  .hoverImage {
    transform-style: preserve-3d;
    transition: transform 0.1s ease-out;
    cursor: pointer;
    display: block;
    mask-size: contain;
    -webkit-mask-size: contain;
    mask-repeat: no-repeat;
    -webkit-mask-repeat: no-repeat;
    mask-position: center;
    -webkit-mask-position: center;
  }

  .shine {
    opacity: 0;
    background: radial-gradient(
      circle at 50% 50%,
      rgba(255, 255, 255, 0.8) 0%,
      rgba(255, 255, 255, 0.3) 20%,
      transparent 50%
    );
    transition: opacity 0.3s;
    mask-size: contain;
    -webkit-mask-size: contain;
    mask-repeat: no-repeat;
    -webkit-mask-repeat: no-repeat;
    mask-position: center;
    -webkit-mask-position: center;
  }

  .shine-active {
    opacity: 1;
  }

  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.6s ease-out forwards;
  }

  .animation-delay-200 {
    animation-delay: 0.2s;
  }

  .animation-delay-400 {
    animation-delay: 0.4s;
  }

  .animation-delay-600 {
    animation-delay: 0.6s;
  }
</style>

<script>
  const initHoverEffect = () => {
    const imageElement = document.getElementById('hoverLogo') as HTMLImageElement;
    const wrapper = imageElement?.parentElement as HTMLDivElement;
    const shineElement = wrapper?.querySelector('.shine') as HTMLDivElement;
    
    if (!imageElement || !shineElement || !wrapper) return;

    const handleMouseMove = (e: Event) => {
      const mouseEvent = e as MouseEvent;
      const rect = wrapper.getBoundingClientRect();
      const x = mouseEvent.clientX - rect.left;
      const y = mouseEvent.clientY - rect.top;
      
      // Rotaci칩n 3D
      const dx = (x - rect.width / 2) / (rect.width / 2);
      const dy = (y - rect.height / 2) / (rect.height / 2);
      
      imageElement.style.transform = `
        perspective(1000px) 
        rotateY(${dx * 25}deg) 
        rotateX(${-dy * 25}deg)
        scale3d(1.05, 1.05, 1.05)
      `;

      // Actualizar posici칩n del brillo
      const moveX = (x / rect.width) * 100;
      const moveY = (y / rect.height) * 100;
      
      shineElement.classList.add('shine-active');
      shineElement.style.background = `radial-gradient(
        circle at ${moveX}% ${moveY}%,
        rgba(255, 255, 255, 0.8) 0%,
        rgba(255, 255, 255, 0.3) 20%,
        transparent 50%
      )`;
    };

    const handleMouseLeave = () => {
      imageElement.style.transform = 'none';
      shineElement.classList.remove('shine-active');
    };

    wrapper.addEventListener('mousemove', handleMouseMove as EventListener);
    wrapper.addEventListener('mouseleave', handleMouseLeave);

    // Cleanup
    return () => {
      wrapper.removeEventListener('mousemove', handleMouseMove as EventListener);
      wrapper.removeEventListener('mouseleave', handleMouseLeave);
    };
  };

  document.addEventListener('DOMContentLoaded', initHoverEffect);
</script>