---
import { Image } from 'astro:assets';
---

<nav class="fixed w-full z-50 py-1 bg-black/45 backdrop-blur-lg border-b border-purple-500/20">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between h-16">
      <a href="/" class="flex items-center space-x-2">
        <Image src="/Logo/Recurso 2.svg" alt="" width={40} height={40} class="hoverImage"/>
        <span class="text-2xl font-bold">
          <span class="text-green-400">Hack<span class="text-purple-400">Reality</span></span>
          
        </span>
      </a>
      <div class="hidden md:flex space-x-8">
        <a href="#about" id="section" class="text-gray-300 font-semibold hover:text-white transition-colors">Sobre</a>
        <a href="#features" id="section" class="text-gray-300 font-semibold hover:text-white transition-colors">Características</a>
        <a href="#stats" id="section" class="text-gray-300 font-semibold hover:text-white transition-colors">Estadísticas</a>
        <a href="#partners" id="section" class="text-gray-300 font-semibold hover:text-white transition-colors">Socios</a>
      </div>
      <div class="flex items-center space-x-4">
        <a href="#" class="font-bold px-4 py-2 rounded-md bg-purple-600 text-white hover:bg-purple-700 transition-colors">
          Registrarse
        </a>
      </div>
    </div>
  </div>
</nav>
<style>
  #section {
  font-family: "Bricolage Grotesque", sans-serif;
 }
.hoverImage {
  position: relative;
  align-self: stretch;
  flex-shrink: 0;
  object-fit: cover;
}
</style>
<script>
window.onload = function() {
const imageElement = document.querySelector('.hoverImage') as HTMLElement;
if (imageElement) {
  const handleMouseMove = (e: MouseEvent) => {
    let rect = imageElement.getBoundingClientRect();
    let x = e.clientX - rect.left;
    let y = e.clientY - rect.top;

    let dx = (x - rect.width / 2) / (rect.width / 2);
    let dy = (y - rect.height / 2) / (rect.height / 2);

    imageElement.style.transform = `perspective(500px) rotateY(${dx * 5}deg) rotateX(${-dy * 5}deg)`;
  };

  const handleMouseLeave = () => {
    imageElement.style.transform = "";
  };

  imageElement.addEventListener('mousemove', handleMouseMove);
  imageElement.addEventListener('mouseleave', handleMouseLeave);
}
}
</script>

