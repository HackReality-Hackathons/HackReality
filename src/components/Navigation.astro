---
import { Image } from 'astro:assets';
---

<nav class="fixed w-full z-50 py-1 bg-black/45 backdrop-blur-lg border-b border-purple-500/20">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between h-16">
      <a href="/" class="flex items-center space-x-2">
        <Image src="/Logo/hr31.png" alt="HackReality Logo" width={30} height={30} class="hoverImage"/>
        <span class="text-xl sm:text-2xl font-bold">
          <span class="text-green-400">Hack<span class="text-purple-400">Reality</span></span>
        </span>
      </a>
      <div class="hidden md:flex space-x-4 lg:space-x-8">
        <a href="#about" id="section" class="text-sm lg:text-base text-gray-300 font-semibold hover:text-white transition-colors">Sobre</a>
        <a href="#features" id="section" class="text-sm lg:text-base text-gray-300 font-semibold hover:text-white transition-colors">Características</a>
        <a href="#stats" id="section" class="text-sm lg:text-base text-gray-300 font-semibold hover:text-white transition-colors">Horario</a>
        <a href="#partners" id="section" class="text-sm lg:text-base text-gray-300 font-semibold hover:text-white transition-colors">Sponsors</a>
      </div>
      <div class="flex items-center space-x-4">
        <a href="" class="hidden sm:inline-block text-sm lg:text-base font-bold px-4 py-2 rounded-md bg-red-500 text-black hover:bg-green-400 transition-colors">
          En proceso
        </a>
<!--         <a href="auth" class="hidden sm:inline-block text-sm lg:text-base font-bold px-4 py-2 rounded-md bg-green-500 text-black hover:bg-green-400 transition-colors">
          Log-in
        </a> -->
        <button id="mobile-menu-button" class="md:hidden text-gray-300 hover:text-white focus:outline-none">
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
  <div id="mobile-menu" class="hidden md:hidden">
    <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
      <a href="#about" class="block px-3 py-2 rounded-md text-base font-medium text-gray-300 hover:text-white hover:bg-gray-700 transition-colors">Sobre</a>
      <a href="#features" class="block px-3 py-2 rounded-md text-base font-medium text-gray-300 hover:text-white hover:bg-gray-700 transition-colors">Características</a>
      <a href="#stats" class="block px-3 py-2 rounded-md text-base font-medium text-gray-300 hover:text-white hover:bg-gray-700 transition-colors">Horario</a>
      <a href="#partners" class="block px-3 py-2 rounded-md text-base font-medium text-gray-300 hover:text-white hover:bg-gray-700 transition-colors">Sponsors</a>
      <a href="#" class="block px-3 py-2 rounded-md text-base font-medium bg-green-500 text-black hover:bg-green-400 transition-colors">Registrarse</a>
    </div>
  </div>
</nav>

<style>
  #section {
    font-family: "Bricolage Grotesque", sans-serif;
  }
  .hoverImage {
    position: relative;
    align-self: stretch;
    flex-shrink: 0;
    object-fit: cover;
  }
</style>

<script>
  window.onload = function() {
    const imageElement = document.querySelector('.hoverImage') as HTMLElement;
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');

    if (imageElement) {
      const handleMouseMove = (e: MouseEvent) => {
        let rect = imageElement.getBoundingClientRect();
        let x = e.clientX - rect.left;
        let y = e.clientY - rect.top;

        let dx = (x - rect.width / 2) / (rect.width / 2);
        let dy = (y - rect.height / 2) / (rect.height / 2);

        imageElement.style.transform = `perspective(500px) rotateY(${dx * 5}deg) rotateX(${-dy * 5}deg)`;
      };

      const handleMouseLeave = () => {
        imageElement.style.transform = "";
      };

      imageElement.addEventListener('mousemove', handleMouseMove);
      imageElement.addEventListener('mouseleave', handleMouseLeave);
    }

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }
  }
</script>

